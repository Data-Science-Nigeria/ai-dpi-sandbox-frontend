name: Deploy Sandbox Frontend to Azure VM

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: sandbox-frontend-env

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create source tarball (HEAD only)
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git archive --format=tar -o source.tar HEAD
          gzip -9 source.tar
          mv source.tar.gz source.tgz

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/azurevm.key
          sed -i 's/\r$//' ~/.ssh/azurevm.key
          chmod 600 ~/.ssh/azurevm.key

      - name: Upload to VM
        run: scp -o StrictHostKeyChecking=no -i ~/.ssh/azurevm.key \
             source.tgz ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/tmp/source.tgz

      - name: Deploy on VM
        env:
          VM_PATH: ${{ secrets.VM_PATH }}              # /opt/nextapp
          SERVICE: ${{ secrets.SERVICE_NAME || 'sandbox-frontend' }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/azurevm.key \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -s' <<'REMOTE'
          set -euo pipefail
          BASE="${VM_PATH:-/opt/nextapp}"
          TS=$(date +%Y%m%d%H%M%S)
          NEW_REL="$BASE/releases/$TS"

          mkdir -p "$NEW_REL"
          tar -C "$NEW_REL" -xzf /tmp/source.tgz
          rm -f /tmp/source.tgz

          # Build as azureuser (matches your systemd unit)
          sudo chown -R azureuser:azureuser "$BASE" "$NEW_REL"
          cd "$NEW_REL"
          command -v yarn >/dev/null 2>&1 || sudo npm i -g yarn
          sudo -u azureuser yarn --frozen-lockfile
          sudo -u azureuser yarn build
          test -d ".next" || { echo "Build failed: .next missing"; exit 1; }

          ln -sfn "$NEW_REL" "$BASE/current"

          sudo systemctl daemon-reload
          sudo systemctl restart "${SERVICE:-sandbox-frontend}"
          sudo systemctl --no-pager status "${SERVICE:-sandbox-frontend}" | sed -n '1,20p'
          curl -sI http://127.0.0.1:8080 | head -n1 || true
