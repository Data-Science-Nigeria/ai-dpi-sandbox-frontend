// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
  HealthCheckHealthGetData,
  HealthCheckHealthGetResponses,
  MetricsMetricsGetData,
  MetricsMetricsGetResponses,
  RootGetData,
  RootGetResponses,
  ProxyAuthServiceApiV1AuthPathPatchData,
  ProxyAuthServiceApiV1AuthPathPatchResponses,
  ProxyAuthServiceApiV1AuthPathPatchErrors,
  ProxyAuthServiceApiV1AuthPathPatch2Data,
  ProxyAuthServiceApiV1AuthPathPatch2Responses,
  ProxyAuthServiceApiV1AuthPathPatch2Errors,
  ProxyAuthServiceApiV1AuthPathPatch3Data,
  ProxyAuthServiceApiV1AuthPathPatch3Responses,
  ProxyAuthServiceApiV1AuthPathPatch3Errors,
  ProxyAuthServiceApiV1AuthPathPatch4Data,
  ProxyAuthServiceApiV1AuthPathPatch4Responses,
  ProxyAuthServiceApiV1AuthPathPatch4Errors,
  ProxyAuthServiceApiV1AuthPathPatch5Data,
  ProxyAuthServiceApiV1AuthPathPatch5Responses,
  ProxyAuthServiceApiV1AuthPathPatch5Errors,
  ProxyAuthServiceApiV1AuthPathPatch6Data,
  ProxyAuthServiceApiV1AuthPathPatch6Responses,
  ProxyAuthServiceApiV1AuthPathPatch6Errors,
  ProxySmsServiceApiV1SmsPathPatchData,
  ProxySmsServiceApiV1SmsPathPatchResponses,
  ProxySmsServiceApiV1SmsPathPatchErrors,
  ProxySmsServiceApiV1SmsPathPatch2Data,
  ProxySmsServiceApiV1SmsPathPatch2Responses,
  ProxySmsServiceApiV1SmsPathPatch2Errors,
  ProxySmsServiceApiV1SmsPathPatch3Data,
  ProxySmsServiceApiV1SmsPathPatch3Responses,
  ProxySmsServiceApiV1SmsPathPatch3Errors,
  ProxySmsServiceApiV1SmsPathPatch4Data,
  ProxySmsServiceApiV1SmsPathPatch4Responses,
  ProxySmsServiceApiV1SmsPathPatch4Errors,
  ProxySmsServiceApiV1SmsPathPatch5Data,
  ProxySmsServiceApiV1SmsPathPatch5Responses,
  ProxySmsServiceApiV1SmsPathPatch5Errors,
  ProxySmsServiceApiV1SmsPathPatch6Data,
  ProxySmsServiceApiV1SmsPathPatch6Responses,
  ProxySmsServiceApiV1SmsPathPatch6Errors,
  ProxyLlmServiceApiV1LlmPathPatchData,
  ProxyLlmServiceApiV1LlmPathPatchResponses,
  ProxyLlmServiceApiV1LlmPathPatchErrors,
  ProxyLlmServiceApiV1LlmPathPatch2Data,
  ProxyLlmServiceApiV1LlmPathPatch2Responses,
  ProxyLlmServiceApiV1LlmPathPatch2Errors,
  ProxyLlmServiceApiV1LlmPathPatch3Data,
  ProxyLlmServiceApiV1LlmPathPatch3Responses,
  ProxyLlmServiceApiV1LlmPathPatch3Errors,
  ProxyLlmServiceApiV1LlmPathPatch4Data,
  ProxyLlmServiceApiV1LlmPathPatch4Responses,
  ProxyLlmServiceApiV1LlmPathPatch4Errors,
  ProxyLlmServiceApiV1LlmPathPatch5Data,
  ProxyLlmServiceApiV1LlmPathPatch5Responses,
  ProxyLlmServiceApiV1LlmPathPatch5Errors,
  ProxyLlmServiceApiV1LlmPathPatch6Data,
  ProxyLlmServiceApiV1LlmPathPatch6Responses,
  ProxyLlmServiceApiV1LlmPathPatch6Errors,
  ProxyConfigServiceApiV1ConfigsPathPatchData,
  ProxyConfigServiceApiV1ConfigsPathPatchResponses,
  ProxyConfigServiceApiV1ConfigsPathPatchErrors,
  ProxyConfigServiceApiV1ConfigsPathPatch2Data,
  ProxyConfigServiceApiV1ConfigsPathPatch2Responses,
  ProxyConfigServiceApiV1ConfigsPathPatch2Errors,
  ProxyConfigServiceApiV1ConfigsPathPatch3Data,
  ProxyConfigServiceApiV1ConfigsPathPatch3Responses,
  ProxyConfigServiceApiV1ConfigsPathPatch3Errors,
  ProxyConfigServiceApiV1ConfigsPathPatch4Data,
  ProxyConfigServiceApiV1ConfigsPathPatch4Responses,
  ProxyConfigServiceApiV1ConfigsPathPatch4Errors,
  ProxyConfigServiceApiV1ConfigsPathPatch5Data,
  ProxyConfigServiceApiV1ConfigsPathPatch5Responses,
  ProxyConfigServiceApiV1ConfigsPathPatch5Errors,
  ProxyConfigServiceApiV1ConfigsPathPatch6Data,
  ProxyConfigServiceApiV1ConfigsPathPatch6Responses,
  ProxyConfigServiceApiV1ConfigsPathPatch6Errors,
  GetServicesHealthApiV1ServicesHealthGetData,
  GetServicesHealthApiV1ServicesHealthGetResponses,
  GetServicesStatusApiV1ServicesStatusGetData,
  GetServicesStatusApiV1ServicesStatusGetResponses,
  GetServiceHealthApiV1ServicesServiceNameHealthGetData,
  GetServiceHealthApiV1ServicesServiceNameHealthGetResponses,
  GetServiceHealthApiV1ServicesServiceNameHealthGetErrors,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetData,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetResponses,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetErrors,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Health Check
 * Health check endpoint.
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(
  options?: Options<HealthCheckHealthGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    HealthCheckHealthGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/health",
    ...options,
  });
};

/**
 * Metrics
 * Prometheus metrics endpoint.
 */
export const metricsMetricsGet = <ThrowOnError extends boolean = false>(
  options?: Options<MetricsMetricsGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    MetricsMetricsGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/metrics",
    ...options,
  });
};

/**
 * Root
 * Root endpoint.
 */
export const rootGet = <ThrowOnError extends boolean = false>(
  options?: Options<RootGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    RootGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatchData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxyAuthServiceApiV1AuthPathPatchResponses,
    ProxyAuthServiceApiV1AuthPathPatchErrors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatch2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxyAuthServiceApiV1AuthPathPatch2Responses,
    ProxyAuthServiceApiV1AuthPathPatch2Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatch3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxyAuthServiceApiV1AuthPathPatch3Responses,
    ProxyAuthServiceApiV1AuthPathPatch3Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatch4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxyAuthServiceApiV1AuthPathPatch4Responses,
    ProxyAuthServiceApiV1AuthPathPatch4Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatch5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxyAuthServiceApiV1AuthPathPatch5Responses,
    ProxyAuthServiceApiV1AuthPathPatch5Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathPatch6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathPatch6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxyAuthServiceApiV1AuthPathPatch6Responses,
    ProxyAuthServiceApiV1AuthPathPatch6Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatchData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxySmsServiceApiV1SmsPathPatchResponses,
    ProxySmsServiceApiV1SmsPathPatchErrors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatch2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxySmsServiceApiV1SmsPathPatch2Responses,
    ProxySmsServiceApiV1SmsPathPatch2Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatch3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxySmsServiceApiV1SmsPathPatch3Responses,
    ProxySmsServiceApiV1SmsPathPatch3Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatch4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxySmsServiceApiV1SmsPathPatch4Responses,
    ProxySmsServiceApiV1SmsPathPatch4Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatch5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxySmsServiceApiV1SmsPathPatch5Responses,
    ProxySmsServiceApiV1SmsPathPatch5Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathPatch6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathPatch6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxySmsServiceApiV1SmsPathPatch6Responses,
    ProxySmsServiceApiV1SmsPathPatch6Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatchData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxyLlmServiceApiV1LlmPathPatchResponses,
    ProxyLlmServiceApiV1LlmPathPatchErrors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatch2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxyLlmServiceApiV1LlmPathPatch2Responses,
    ProxyLlmServiceApiV1LlmPathPatch2Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatch3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxyLlmServiceApiV1LlmPathPatch3Responses,
    ProxyLlmServiceApiV1LlmPathPatch3Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatch4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxyLlmServiceApiV1LlmPathPatch4Responses,
    ProxyLlmServiceApiV1LlmPathPatch4Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatch5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxyLlmServiceApiV1LlmPathPatch5Responses,
    ProxyLlmServiceApiV1LlmPathPatch5Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathPatch6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathPatch6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxyLlmServiceApiV1LlmPathPatch6Responses,
    ProxyLlmServiceApiV1LlmPathPatch6Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatchData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxyConfigServiceApiV1ConfigsPathPatchResponses,
    ProxyConfigServiceApiV1ConfigsPathPatchErrors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatch2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxyConfigServiceApiV1ConfigsPathPatch2Responses,
    ProxyConfigServiceApiV1ConfigsPathPatch2Errors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatch3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxyConfigServiceApiV1ConfigsPathPatch3Responses,
    ProxyConfigServiceApiV1ConfigsPathPatch3Errors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatch4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxyConfigServiceApiV1ConfigsPathPatch4Responses,
    ProxyConfigServiceApiV1ConfigsPathPatch4Errors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatch5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxyConfigServiceApiV1ConfigsPathPatch5Responses,
    ProxyConfigServiceApiV1ConfigsPathPatch5Errors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Proxy Config Service
 * Proxy requests to config service.
 */
export const proxyConfigServiceApiV1ConfigsPathPatch6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyConfigServiceApiV1ConfigsPathPatch6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxyConfigServiceApiV1ConfigsPathPatch6Responses,
    ProxyConfigServiceApiV1ConfigsPathPatch6Errors,
    ThrowOnError
  >({
    url: "/api/v1/configs/{path}",
    ...options,
  });
};

/**
 * Get Services Health
 * Get health status of all backend services.
 */
export const getServicesHealthApiV1ServicesHealthGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetServicesHealthApiV1ServicesHealthGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetServicesHealthApiV1ServicesHealthGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/v1/services/health",
    ...options,
  });
};

/**
 * Get Services Status
 * Get detailed status of all services.
 */
export const getServicesStatusApiV1ServicesStatusGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetServicesStatusApiV1ServicesStatusGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetServicesStatusApiV1ServicesStatusGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/v1/services/status",
    ...options,
  });
};

/**
 * Get Service Health
 * Get health status of a specific service.
 */
export const getServiceHealthApiV1ServicesServiceNameHealthGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetServiceHealthApiV1ServicesServiceNameHealthGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetServiceHealthApiV1ServicesServiceNameHealthGetResponses,
    GetServiceHealthApiV1ServicesServiceNameHealthGetErrors,
    ThrowOnError
  >({
    url: "/api/v1/services/{service_name}/health",
    ...options,
  });
};

/**
 * Get Service Metrics
 * Get metrics for a specific service.
 */
export const getServiceMetricsApiV1ServicesServiceNameMetricsGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetResponses,
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetErrors,
    ThrowOnError
  >({
    url: "/api/v1/services/{service_name}/metrics",
    ...options,
  });
};
