// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
  HealthCheckHealthGetData,
  HealthCheckHealthGetResponses,
  MetricsMetricsGetData,
  MetricsMetricsGetResponses,
  RootGetData,
  RootGetResponses,
  ProxyAuthServiceApiV1AuthPathOptionsData,
  ProxyAuthServiceApiV1AuthPathOptionsResponses,
  ProxyAuthServiceApiV1AuthPathOptionsErrors,
  ProxyAuthServiceApiV1AuthPathOptions2Data,
  ProxyAuthServiceApiV1AuthPathOptions2Responses,
  ProxyAuthServiceApiV1AuthPathOptions2Errors,
  ProxyAuthServiceApiV1AuthPathOptions3Data,
  ProxyAuthServiceApiV1AuthPathOptions3Responses,
  ProxyAuthServiceApiV1AuthPathOptions3Errors,
  ProxyAuthServiceApiV1AuthPathOptions4Data,
  ProxyAuthServiceApiV1AuthPathOptions4Responses,
  ProxyAuthServiceApiV1AuthPathOptions4Errors,
  ProxyAuthServiceApiV1AuthPathOptions5Data,
  ProxyAuthServiceApiV1AuthPathOptions5Responses,
  ProxyAuthServiceApiV1AuthPathOptions5Errors,
  ProxyAuthServiceApiV1AuthPathOptions6Data,
  ProxyAuthServiceApiV1AuthPathOptions6Responses,
  ProxyAuthServiceApiV1AuthPathOptions6Errors,
  ProxySmsServiceApiV1SmsPathOptionsData,
  ProxySmsServiceApiV1SmsPathOptionsResponses,
  ProxySmsServiceApiV1SmsPathOptionsErrors,
  ProxySmsServiceApiV1SmsPathOptions2Data,
  ProxySmsServiceApiV1SmsPathOptions2Responses,
  ProxySmsServiceApiV1SmsPathOptions2Errors,
  ProxySmsServiceApiV1SmsPathOptions3Data,
  ProxySmsServiceApiV1SmsPathOptions3Responses,
  ProxySmsServiceApiV1SmsPathOptions3Errors,
  ProxySmsServiceApiV1SmsPathOptions4Data,
  ProxySmsServiceApiV1SmsPathOptions4Responses,
  ProxySmsServiceApiV1SmsPathOptions4Errors,
  ProxySmsServiceApiV1SmsPathOptions5Data,
  ProxySmsServiceApiV1SmsPathOptions5Responses,
  ProxySmsServiceApiV1SmsPathOptions5Errors,
  ProxySmsServiceApiV1SmsPathOptions6Data,
  ProxySmsServiceApiV1SmsPathOptions6Responses,
  ProxySmsServiceApiV1SmsPathOptions6Errors,
  ProxyLlmServiceApiV1LlmPathOptionsData,
  ProxyLlmServiceApiV1LlmPathOptionsResponses,
  ProxyLlmServiceApiV1LlmPathOptionsErrors,
  ProxyLlmServiceApiV1LlmPathOptions2Data,
  ProxyLlmServiceApiV1LlmPathOptions2Responses,
  ProxyLlmServiceApiV1LlmPathOptions2Errors,
  ProxyLlmServiceApiV1LlmPathOptions3Data,
  ProxyLlmServiceApiV1LlmPathOptions3Responses,
  ProxyLlmServiceApiV1LlmPathOptions3Errors,
  ProxyLlmServiceApiV1LlmPathOptions4Data,
  ProxyLlmServiceApiV1LlmPathOptions4Responses,
  ProxyLlmServiceApiV1LlmPathOptions4Errors,
  ProxyLlmServiceApiV1LlmPathOptions5Data,
  ProxyLlmServiceApiV1LlmPathOptions5Responses,
  ProxyLlmServiceApiV1LlmPathOptions5Errors,
  ProxyLlmServiceApiV1LlmPathOptions6Data,
  ProxyLlmServiceApiV1LlmPathOptions6Responses,
  ProxyLlmServiceApiV1LlmPathOptions6Errors,
  GetServicesHealthApiV1ServicesHealthGetData,
  GetServicesHealthApiV1ServicesHealthGetResponses,
  GetServicesStatusApiV1ServicesStatusGetData,
  GetServicesStatusApiV1ServicesStatusGetResponses,
  GetServiceHealthApiV1ServicesServiceNameHealthGetData,
  GetServiceHealthApiV1ServicesServiceNameHealthGetResponses,
  GetServiceHealthApiV1ServicesServiceNameHealthGetErrors,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetData,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetResponses,
  GetServiceMetricsApiV1ServicesServiceNameMetricsGetErrors,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Health Check
 * Health check endpoint.
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(
  options?: Options<HealthCheckHealthGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    HealthCheckHealthGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/health",
    ...options,
  });
};

/**
 * Metrics
 * Prometheus metrics endpoint.
 */
export const metricsMetricsGet = <ThrowOnError extends boolean = false>(
  options?: Options<MetricsMetricsGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    MetricsMetricsGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/metrics",
    ...options,
  });
};

/**
 * Root
 * Root endpoint.
 */
export const rootGet = <ThrowOnError extends boolean = false>(
  options?: Options<RootGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    RootGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxyAuthServiceApiV1AuthPathOptionsResponses,
    ProxyAuthServiceApiV1AuthPathOptionsErrors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptions2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxyAuthServiceApiV1AuthPathOptions2Responses,
    ProxyAuthServiceApiV1AuthPathOptions2Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptions3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxyAuthServiceApiV1AuthPathOptions3Responses,
    ProxyAuthServiceApiV1AuthPathOptions3Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptions4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxyAuthServiceApiV1AuthPathOptions4Responses,
    ProxyAuthServiceApiV1AuthPathOptions4Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptions5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxyAuthServiceApiV1AuthPathOptions5Responses,
    ProxyAuthServiceApiV1AuthPathOptions5Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Auth Service
 * Proxy requests to auth service.
 */
export const proxyAuthServiceApiV1AuthPathOptions6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyAuthServiceApiV1AuthPathOptions6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxyAuthServiceApiV1AuthPathOptions6Responses,
    ProxyAuthServiceApiV1AuthPathOptions6Errors,
    ThrowOnError
  >({
    url: "/api/v1/auth/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxySmsServiceApiV1SmsPathOptionsResponses,
    ProxySmsServiceApiV1SmsPathOptionsErrors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptions2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxySmsServiceApiV1SmsPathOptions2Responses,
    ProxySmsServiceApiV1SmsPathOptions2Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptions3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxySmsServiceApiV1SmsPathOptions3Responses,
    ProxySmsServiceApiV1SmsPathOptions3Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptions4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxySmsServiceApiV1SmsPathOptions4Responses,
    ProxySmsServiceApiV1SmsPathOptions4Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptions5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxySmsServiceApiV1SmsPathOptions5Responses,
    ProxySmsServiceApiV1SmsPathOptions5Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Sms Service
 * Proxy requests to SMS service.
 */
export const proxySmsServiceApiV1SmsPathOptions6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxySmsServiceApiV1SmsPathOptions6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxySmsServiceApiV1SmsPathOptions6Responses,
    ProxySmsServiceApiV1SmsPathOptions6Errors,
    ThrowOnError
  >({
    url: "/api/v1/sms/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    ProxyLlmServiceApiV1LlmPathOptionsResponses,
    ProxyLlmServiceApiV1LlmPathOptionsErrors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions2 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptions2Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ProxyLlmServiceApiV1LlmPathOptions2Responses,
    ProxyLlmServiceApiV1LlmPathOptions2Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions3 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptions3Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).options<
    ProxyLlmServiceApiV1LlmPathOptions3Responses,
    ProxyLlmServiceApiV1LlmPathOptions3Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions4 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptions4Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    ProxyLlmServiceApiV1LlmPathOptions4Responses,
    ProxyLlmServiceApiV1LlmPathOptions4Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions5 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptions5Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ProxyLlmServiceApiV1LlmPathOptions5Responses,
    ProxyLlmServiceApiV1LlmPathOptions5Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Proxy Llm Service
 * Proxy requests to LLM service.
 */
export const proxyLlmServiceApiV1LlmPathOptions6 = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ProxyLlmServiceApiV1LlmPathOptions6Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ProxyLlmServiceApiV1LlmPathOptions6Responses,
    ProxyLlmServiceApiV1LlmPathOptions6Errors,
    ThrowOnError
  >({
    url: "/api/v1/llm/{path}",
    ...options,
  });
};

/**
 * Get Services Health
 * Get health status of all backend services.
 */
export const getServicesHealthApiV1ServicesHealthGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetServicesHealthApiV1ServicesHealthGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetServicesHealthApiV1ServicesHealthGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/v1/services/health",
    ...options,
  });
};

/**
 * Get Services Status
 * Get detailed status of all services.
 */
export const getServicesStatusApiV1ServicesStatusGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetServicesStatusApiV1ServicesStatusGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetServicesStatusApiV1ServicesStatusGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/v1/services/status",
    ...options,
  });
};

/**
 * Get Service Health
 * Get health status of a specific service.
 */
export const getServiceHealthApiV1ServicesServiceNameHealthGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetServiceHealthApiV1ServicesServiceNameHealthGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetServiceHealthApiV1ServicesServiceNameHealthGetResponses,
    GetServiceHealthApiV1ServicesServiceNameHealthGetErrors,
    ThrowOnError
  >({
    url: "/api/v1/services/{service_name}/health",
    ...options,
  });
};

/**
 * Get Service Metrics
 * Get metrics for a specific service.
 */
export const getServiceMetricsApiV1ServicesServiceNameMetricsGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetResponses,
    GetServiceMetricsApiV1ServicesServiceNameMetricsGetErrors,
    ThrowOnError
  >({
    url: "/api/v1/services/{service_name}/metrics",
    ...options,
  });
};
